.gg-trash{box-sizing:border-box;position:relative;display:block;transform:scale(var(--ggs,1));width:10px;height:12px;border:2px solid transparent;box-shadow:0 0 0 2px,inset -2px 0 0,inset 2px 0 0;border-bottom-left-radius:1px;border-bottom-right-radius:1px;margin-top:4px}.gg-trash:after,.gg-trash:before{content:"";display:block;box-sizing:border-box;position:absolute}.gg-trash:after{background:currentColor;border-radius:3px;width:16px;height:2px;top:-4px;left:-5px}.gg-trash:before{width:10px;height:4px;border:2px solid;border-bottom:transparent;border-top-left-radius:2px;border-top-right-radius:2px;top:-7px;left:-2px}.gg-close{box-sizing:border-box;position:relative;display:block;transform:scale(var(--ggs,1));width:22px;height:22px;border:2px solid transparent;border-radius:40px}.gg-close:after,.gg-close:before{content:"";display:block;box-sizing:border-box;position:absolute;width:16px;height:2px;background:currentColor;transform:rotate(45deg);border-radius:5px;top:8px;left:1px}.gg-close:after{transform:rotate(-45deg)}.switch{font-size:10px;position:relative;display:inline-block;width:3.75em;height:2.125em}.switch input{opacity:0;width:0;height:0}.switch input:checked+.slider{background-color:#2271b1}.switch input:focus+.slider{box-shadow:0 0 1px #2271b1}.switch input:checked+.slider:before{transform:translateX(1.625em)}.switch .slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s;border-radius:2.125em}.switch .slider:before{position:absolute;content:"";height:1.625em;width:1.625em;left:.25em;bottom:.25em;background-color:#fff;transition:.4s;border-radius:50%}.sp-schedule{display:grid;grid-template-columns:repeat(auto-fill,minmax(222px,1fr));width:100%;max-width:800px;border:1px solid #eaeaea;background-color:#f8f8f8}.sp-schedule-day{padding:10px;background-color:#fff}.sp-schedule-day input[type=number],.sp-schedule-day input[type=text]{text-align:center}.sp-schedule-day__title{margin-top:0;text-align:center;text-transform:capitalize}.sp-schedule-day__slot{display:flex;align-items:center}.sp-schedule-day__slot>input{width:49%}.sp-schedule-day__slot:not(:last-child){margin-bottom:10px}.sp-schedule-day__slot .js-remove-slot{margin-left:15px;transition:color .15s ease}.sp-schedule-day__slot .js-remove-slot:hover{color:#e74c3c}.sp-schedule-day .button{display:block;margin:0 auto}.ui-datepicker-calendar .ui-state-highlight a{background:#2271b1 none!important}.ui-datepicker-year,.ui-datepicker thead{display:none}.ui-datepicker td.ui-state-disabled{pointer-events:auto}.sp-public-holidays-container{display:flex}.sp-public-holidays-container #sp-public-holidays{margin-left:20px}#sp-public-holidays{width:400px;padding:10px;border:1px solid #eaeaea;background-color:#fff}.sp-public-holiday{height:fit-content;display:inline-flex;align-items:center;padding:5px;margin-bottom:10px;background-color:#ddd;border:1px solid #00000038;border-radius:2px}.sp-public-holiday:not(:last-child){margin-right:5px}.sp-public-holiday__remove{color:#000;display:block;transition:color .15s ease}.sp-public-holiday__remove:hover{color:#e74c3c}.sp-countries-container{margin-top:20px;display:flex}.sp-countries-list{max-width:550px;min-width:220px;padding:10px 0;background-color:#fff;border-radius:4px}.sp-countries-list h4{padding:0 15px}.sp-countries-list:not(:last-child){margin-right:10px}.sp-countries-list ul{max-height:400px;overflow-y:auto;padding:0 15px}.sp-countries-list li{display:flex;align-items:center}.sp-countries-list li a{display:block;margin-left:10px;cursor:pointer;transition:color .15s ease}.sp-countries-list li a:hover{color:#e74c3c}.sp-countries-list li:not(:last-child){margin-bottom:10px}.sp-countries-list li input{width:33%}.sp-countries-list .button{display:block;margin:0 auto}.sp-field-settings{margin:0}.blessings-container{display:grid;grid-template-columns:repeat(2,1fr);gap:20px;margin-top:15px}.json-generator-error{font-weight:700;color:#e74c3c;font-size:18px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
